<script>
    getData();

    // Get SDK data
    async function getData() {
        const resp = await fetch('/api/sdk-nodes', {
            method: "POST",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        });

        // Get JSON response
        const json = await resp.json();

        // Create country list which will contain all nodes sorted by country
        let country_list = {};

        // Go through each node and sort it by country
        for (let i in json.nodes) {
            const nodes = json.nodes[i];
            if (!nodes.geo) continue;

            // To lower case and replace spaced with '-' so it matches the classes in the svg
            const country = nodes.geo.country.toLowerCase().replaceAll(' ', '_');

            // If the country are not yet in the list, create an empty list for it
            if (!country_list[country]) country_list[country] = [];

            // Push the node to the country list
            country_list[country].push(nodes);
        }

        console.log(country_list);

        // Add elements to node list
        handleNodeList(json.nodes);

        // Add elements to country list
        handleCountryList(country_list, json.nodes.length);


        // Create new style element
        const cssStyle = document.createElement('style');

        // Add color to all the countries with a node in it
        for (const i in country_list) {
            const country = document.getElementsByClassName(i);
            const setting = document.createTextNode(`.${i},.${i}:hover{fill: rgb(255, 165, 0);}`);
            cssStyle.appendChild(setting);
        }

        // Append the styling element to the head element
        document.getElementsByTagName("head")[0].appendChild(cssStyle);

        // Remove loading class from the map
        const map = document.getElementById('map');
        map.classList.toggle('loading');

        console.log(country_list);
    }

    function handleNodeList(nodes) {
        // Sort by details
        nodes.sort(function(a,b){
            if (a.geo.details) return -1;
            return 1;
        });

        const node_table = document.getElementById('node-table');
        nodes.forEach(node=>{
            const row = document.createElement('tr');
            const address = document.createElement('td');
            address.innerText = node.address || '-';
            const country = document.createElement('td');
            country.innerText = node.geo.country || '-';
            const isp = document.createElement('td');
            isp.innerText = node.geo.organization || '-';
            const details = document.createElement('td');
            details.innerText = node.geo.details || '-';

            row.appendChild(address);
            row.appendChild(country);
            row.appendChild(isp);
            row.appendChild(details);

            node_table.appendChild(row);
        });

        // Remove loading class from node list
        const node_list = document.getElementById('node-list-wrapper');
        node_list.classList.toggle('loading');
    }

    function handleCountryList(country_list, amount) {
        const country_table = document.getElementById('country-table');

        // Convert to array and sort by %
        country_list = Object.values(country_list);
        country_list.sort(function(a,b){
            return b.length - a.length; //ASC, For Descending order use: b - a
        });


        country_list.forEach(country => {
            console.log(country);

            const row = document.createElement('tr');
            const c = document.createElement('td');
            c.innerText = country[0].geo ? country[0].geo.country : (i.charAt(0).toUpperCase() + i.slice(1)).replaceAll('_', ' ');;
            const num = document.createElement('td');
            num.innerText = country.length;
            const proc = document.createElement('td');
            proc.innerText = Math.floor((country.length / amount)*10000)/100;

            row.appendChild(c);
            row.appendChild(num);
            row.appendChild(proc);

            country_table.appendChild(row);
        });

        // Remove loading class from country list
        const country_list_wrapper = document.getElementById('country-list-wrapper');
        country_list_wrapper.classList.toggle('loading');
    }
</script>