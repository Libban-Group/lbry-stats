---
interface Props {
	title: string;
	body: string;
	href: string;
}

const { href, title, body } = Astro.props;
---

<li class="link-card">
	<a href={href}>
		<div class="title">
			<h2 class="gradient-text">{title}</h2>
			<slot/>
		</div>
		<p><em>{body}</em></p>
	</a>
</li>
<style>
	.link-card {
		list-style: none;
		padding: 1px;
		border-radius: 10px;
		background-image: linear-gradient(270deg, var(--gradient1), var(--gradient2));
		box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
		transition: transform 300ms;
	}


	.link-card .title {
		display: flex;
		justify-content: space-between;
		align-items: center;
	}

	.link-card  a {
		color: var(--primary);
		display: block;
		padding: 20px;
		text-decoration: none;
		border-radius: 10px;
		background-color: var(--dim1);
	}
	h2 {
		margin: 0;
		font-size: 2.5rem;
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
	.link-card:is(:hover, :focus-within) {
		transform: scale(1.1);
		background-size: 300% 100%;
		animation: animateBg 3s infinite linear;
		/* background-image: var(--accent-gradient); */
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent));
		background-size: 300% 100%;
		animation: animateBg 3s infinite linear;
	}

	.link-card:is(:hover, :focus-within) .arrow {
		opacity: 1;
		transform: translateX(50px);
	}

	@keyframes animateBg {
	0% {
		background-position: 0 0;
	}
	50% {
		background-position: 100% 0;
	}
	100% {
		background-position: 0 0;
	}
	}
</style>
